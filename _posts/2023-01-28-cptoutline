---
toc: true
layout: post
title: Individual CPT Outline
comments: true
---

## Overview
Our project is an arcade simultation with popular recreations of games in the past. Users can register and compete with other players to get on top of leaderboards. We will have 5 different games, all of which takes knowledge/inspiration from APCSP. 

### My Role
I am the scrum master of our team. My game is a Word game, which takes inspiration from WORDLE. The purpose is to challenge the user to a fun word guessing game and see in how many tries they are able to guess the unknown word. 

### My Game
![]({{site.baseurl}}/wordgame.png)

Here is a prototype of my game. Essentially, the user will have an option to either guess the word, or ask the program for a new word. In my game, I will make it so that everytime the user asks for a hint, they will receive a letter in the unkwown word. They will keep playing until they get it right. I plan to have a timer which will eventually be connected to a leaderboard. In addition, maybe a counter of how many times the user guessed incorrectly. 


### CRUD (Create, Read, Update, Delete) Concepts

Create: Create new words by pulling from the database of words (API)

Read: Program reads user input of words and check to see if user guess is the correct guess or not 

Update: Update with new words every time a user guesses the correct word or gets a hint

Delete: Delete existing word when a user presses the “new word button”


### Collegeboard Criteria
| Category | Explanation |
| ------------- |  ------------- |
| Program Purpose and Function | The purpose of my program is to entertain the user with a word-guessing game. |
| Data Abstraction | Uses several lists to store the number of attempts the user has had in trying to guess the word |
| Managing Complexity | The project uses lists to store the user’s guesses, which is more efficient than having independent variables. In addition, API usage is present. |
| Procedural Abstraction |  The procedure update_userguess uses sequencing, selection and iteration to keep track of the user’s progress in guessing the word. Once the progress made is equal to the word randomly generated, the timer would end for the user. | 
| Algorithm Implementation |  The procedure above is my main algorithim, although it could use some fine tuning. | 
| Testing |  I will show 2 different words being generated | 

### Video Plans
I plan on showing: 

- A screen that gives the user an option to press the “play” button
- Once the user has pressed play, a new screen will show with the program telling the user to start guessing, and the timer starts
- Also want to show the guess count going up
- Specific messages like "wrong" or "correct"
- Show me winning and losing
- Show me generating two differnt types of words
- Make sure to show input, output, functionality, etc. 


### Reflection
So far, I have the general outline of everything, but I still need to work and finetune everything. I'm most worried about the algorithim portion of the CPT, which is why I am going to do my best to make sure that it is good and functional. If that happens, I feel like I could be successful on the CPT portion of the exam. 
